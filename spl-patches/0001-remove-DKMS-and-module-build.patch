From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fabian=20Gr=C3=BCnbichler?= <f.gruenbichler@proxmox.com>
Date: Wed, 12 Oct 2016 10:57:39 +0200
Subject: [PATCH] remove DKMS and module build
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Fabian Gr√ºnbichler <f.gruenbichler@proxmox.com>
---
 debian/control.in | 30 ------------------------
 debian/control    |  1 -
 debian/rules      | 70 ++-----------------------------------------------------
 3 files changed, 2 insertions(+), 99 deletions(-)

diff --git a/debian/control.in b/debian/control.in
index 02d3182..5fd81aa 100644
--- a/debian/control.in
+++ b/debian/control.in
@@ -8,46 +8,16 @@ Build-Depends: autogen,
                autotools-dev,
                debhelper (>= 9),
                dh-autoreconf,
-               dkms (>> 2.2.0.2-1~),
                libtool
 Standards-Version: 4.1.2
 Homepage: http://www.zfsonlinux.org/
 Vcs-Git: git@salsa.debian.org:zfsonlinux-team/spl.git
 Vcs-Browser: https://salsa.debian.org/zfsonlinux-team/spl
 
-Package: spl-dkms
-Architecture: all
-Depends: dkms (>> 2.2.1.0),
-         file,
-         libc-dev,
-         libelf-dev,
-         lsb-release,
-         ${misc:Depends}
-Recommends: spl (>= ${source:Upstream-Version}),
-         @LINUX_COMPAT@
-Provides: spl-modules
-Description: Solaris Porting Layer kernel modules for Linux
- The Solaris Porting Layer (SPL) is a Linux kernel module which provides
- many of the Solaris kernel APIs. This shim layer makes it possible to
- run Solaris kernel code in the Linux kernel with relatively minimal
- modification. The Solaris Porting LAyer Tests (SPLAT) is a Linux kernel
- module which provides a testing harness for the SPL module.
- .
- SPL can be particularly useful when you want to track upstream Illumos
- (or any other OpenSolaris fork) development closely and don't want the
- overhead of maintaining a large patch which converts Solaris primitives
- to Linux primitives.
- .
- This package contains the source code for the SPL and SPLAT Linux kernel
- modules, which can be used with DKMS, so that local kernel modules are
- automatically built and installed every time the kernel packages are
- upgraded.
-
 Package: spl
 Architecture: linux-any
 Conflicts: spl-dev, splat
 Depends: ${misc:Depends}, ${shlibs:Depends}
-Recommends: spl-modules | spl-dkms
 Description: Solaris Porting Layer user-space utilities for Linux
  The Solaris Porting Layer (SPL) is a Linux kernel module which provides
  many of the Solaris kernel APIs. This shim layer makes it possible to
diff --git a/debian/control b/debian/control
index c3abf8d..455c34d 100644
--- a/debian/control
+++ b/debian/control
@@ -8,7 +8,6 @@ Build-Depends: autogen,
                autotools-dev,
                debhelper (>= 9),
                dh-autoreconf,
-               dkms (>> 2.2.0.2-1~),
                libtool
 Standards-Version: 4.1.2
 Homepage: http://www.zfsonlinux.org/
diff --git a/debian/rules b/debian/rules
index c7f2608..bca58f7 100755
--- a/debian/rules
+++ b/debian/rules
@@ -14,12 +14,8 @@ ifndef KVERS
 KVERS=$(shell uname -r)
 endif
 
-non_epoch_version=$(shell echo $(KVERS) | perl -pe 's/^\d+://')
-PACKAGE=spl
-pmodules = $(PACKAGE)-modules-$(non_epoch_version)
-
 %:
-	dh $@ --with dkms,autoreconf --parallel
+	dh $@ --with autoreconf --parallel
 
 override_dh_auto_configure:
 	sed "s/@LINUX_COMPAT@/linux-libc-dev \(< $(shell debian/get_next.sh)\)/" debian/control.in > debian/control
@@ -45,69 +41,7 @@ override_dh_auto_install:
 	@# This creates the $(CURDIR)/$(NAME)-$(VERSION)/ tree.
 	$(MAKE) distdir
 
-	@# This shunt allows DKMS to install the Module.symvers and spl_config.h
-	@# files to the ${dkms_tree} area through the POST_INSTALL directive.
-	echo '#!/bin/sh'  >'$(CURDIR)/$(NAME)-$(VERSION)/cp'
-	echo 'cp "$$@"'  >>'$(CURDIR)/$(NAME)-$(VERSION)/cp'
-	chmod 755 '$(CURDIR)/$(NAME)-$(VERSION)/cp'
-
-	# Install the DKMS source.
-	mkdir -p '$(CURDIR)/debian/tmp/usr/src/'
-	mv '$(CURDIR)/$(NAME)-$(VERSION)' '$(CURDIR)/debian/tmp/usr/src/'
-
-override_dh_dkms:
-	dh_dkms -V $(VERSION)
-
 override_dh_auto_clean:
 	dh_auto_clean
 	@if test -e META.orig; then mv META.orig META; fi
-	sed "s/@LINUX_COMPAT@/linux-libc-dev \(< $(shell debian/get_next.sh)\)/" debian/control.in > debian/control
-
-# ------------
-
-override_dh_prep-deb-files:
-	for templ in $(wildcard $(CURDIR)/debian/*_KVERS_*.in); do \
-		sed -e 's/##KVERS##/$(KVERS)/g ; s/#KVERS#/$(KVERS)/g ; s/_KVERS_/$(KVERS)/g ; s/##KDREV##/$(KDREV)/g ; s/#KDREV#/$(KDREV)/g ; s/_KDREV_/$(KDREV)/g ;  s/_ARCH_/$(DEB_HOST_ARCH)/g' \
-		< $$templ > `echo $$templ | sed -e 's/_KVERS_/$(KVERS)/g ; s/_ARCH_/$(DEB_HOST_ARCH)/g ; s/\.in$$//'` ; \
-	done
-	sed -e 's/##KVERS##/$(KVERS)/g ; s/#KVERS#/$(KVERS)/g ; s/_KVERS_/$(KVERS)/g ; s/##KDREV##/$(KDREV)/g ; s/#KDREV#/$(KDREV)/g ; s/_KDREV_/$(KDREV)/g ; s/_ARCH_/$(DEB_HOST_ARCH)/g' \
-	< debian/control.modules.in > debian/control
-
-override_dh_configure_modules: override_dh_configure_modules_stamp
-override_dh_configure_modules_stamp:
-	./configure --with-config=kernel --with-linux=$(KSRC) \
-		--with-linux-obj=$(KOBJ) \
-		--disable-debug-kmem
-	touch override_dh_configure_modules_stamp
-
-override_dh_binary-modules-udeb: override_dh_prep-deb-files override_dh_configure_modules
-	dh_testdir
-	dh_testroot
-	dh_prep
-
-	$(MAKE) -C $(CURDIR)/module modules
-
-	dh_installdirs -p${pmodules}-di
-	dh_install -p${pmodules}-di
-	dh_gencontrol -p${pmodules}-di
-
-	dh_builddeb -p${pmodules}-di
-
-override_dh_binary-modules: override_dh_prep-deb-files override_dh_configure_modules
-	dh_testdir
-	dh_testroot
-	dh_prep
-
-	$(MAKE) -C $(CURDIR)/module modules
-
-	dh_installdocs -p${pmodules}
-	dh_install -p${pmodules}
-	dh_installchangelogs -p${pmodules}
-	dh_compress -p${pmodules}
-	dh_strip -p${pmodules}
-	dh_fixperms -p${pmodules}
-	dh_installdeb -p${pmodules}
-	dh_gencontrol -p${pmodules}
-	dh_md5sums -p${pmodules}
-
-	dh_builddeb -p${pmodules}
+	cp debian/control.in debian/control
-- 
2.14.2

